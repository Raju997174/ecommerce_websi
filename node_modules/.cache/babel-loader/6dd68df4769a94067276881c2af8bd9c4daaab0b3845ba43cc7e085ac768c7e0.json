{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ducat\\\\OneDrive\\\\Pictures\\\\Apps\\\\Desktop\\\\New folder (4)\\\\src\\\\components\\\\Button\\\\index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shapes = {\n  round: \"rounded-[20px]\",\n  circle: \"rounded-[50%]\"\n};\nconst variants = {\n  fill: {\n    white_A700: \"bg-white-A700 shadow-bs\",\n    indigo_700: \"bg-indigo-700 shadow-bs text-white-A700\",\n    indigo_600: \"bg-indigo-600 text-white-A700\",\n    gray_102: \"bg-gray-102\"\n  },\n  outline: {\n    green_600: \"border-2 border-green-600 border-solid\",\n    red_700: \"border-2 border-red-700 border-solid\",\n    indigo_600: \"border border-indigo-600 border-solid text-indigo-600\",\n    indigo_500: \"border border-indigo-500 border-solid text-indigo-500\"\n  }\n};\nconst sizes = {\n  xs: \"p-2\",\n  sm: \"p-3\",\n  md: \"p-[15px]\",\n  lg: \"p-5\"\n};\nconst Button = ({\n  children,\n  className = \"\",\n  leftIcon,\n  rightIcon,\n  shape = \"\",\n  size = \"\",\n  variant = \"\",\n  color = \"\",\n  ...restProps\n}) => {\n  var _variants$variant;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `${className} ${shape && shapes[shape] || \"\"} ${size && sizes[size] || \"\"} ${variant && ((_variants$variant = variants[variant]) === null || _variants$variant === void 0 ? void 0 : _variants$variant[color]) || \"\"}`,\n    ...restProps,\n    children: [!!leftIcon && leftIcon, children, !!rightIcon && rightIcon]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  shape: PropTypes.oneOf([\"round\", \"circle\"]),\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\"]),\n  variant: PropTypes.oneOf([\"fill\", \"outline\"]),\n  color: PropTypes.oneOf([\"white_A700\", \"indigo_700\", \"indigo_600\", \"gray_102\", \"green_600\", \"red_700\", \"indigo_500\"])\n};\nexport { Button };\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","shapes","round","circle","variants","fill","white_A700","indigo_700","indigo_600","gray_102","outline","green_600","red_700","indigo_500","sizes","xs","sm","md","lg","Button","children","className","leftIcon","rightIcon","shape","size","variant","color","restProps","_variants$variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","node","oneOf","$RefreshReg$"],"sources":["C:/Users/ducat/OneDrive/Pictures/Apps/Desktop/New folder (4)/src/components/Button/index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst shapes = { round: \"rounded-[20px]\", circle: \"rounded-[50%]\" };\nconst variants = {\n  fill: {\n    white_A700: \"bg-white-A700 shadow-bs\",\n    indigo_700: \"bg-indigo-700 shadow-bs text-white-A700\",\n    indigo_600: \"bg-indigo-600 text-white-A700\",\n    gray_102: \"bg-gray-102\",\n  },\n  outline: {\n    green_600: \"border-2 border-green-600 border-solid\",\n    red_700: \"border-2 border-red-700 border-solid\",\n    indigo_600: \"border border-indigo-600 border-solid text-indigo-600\",\n    indigo_500: \"border border-indigo-500 border-solid text-indigo-500\",\n  },\n};\nconst sizes = { xs: \"p-2\", sm: \"p-3\", md: \"p-[15px]\", lg: \"p-5\" };\n\nconst Button = ({\n  children,\n  className = \"\",\n  leftIcon,\n  rightIcon,\n  shape = \"\",\n  size = \"\",\n  variant = \"\",\n  color = \"\",\n  ...restProps\n}) => {\n  return (\n    <button\n      className={`${className} ${(shape && shapes[shape]) || \"\"} ${\n        (size && sizes[size]) || \"\"\n      } ${(variant && variants[variant]?.[color]) || \"\"}`}\n      {...restProps}\n    >\n      {!!leftIcon && leftIcon}\n      {children}\n      {!!rightIcon && rightIcon}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  shape: PropTypes.oneOf([\"round\", \"circle\"]),\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\"]),\n  variant: PropTypes.oneOf([\"fill\", \"outline\"]),\n  color: PropTypes.oneOf([\n    \"white_A700\",\n    \"indigo_700\",\n    \"indigo_600\",\n    \"gray_102\",\n    \"green_600\",\n    \"red_700\",\n    \"indigo_500\",\n  ]),\n};\n\nexport { Button };\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,MAAM,GAAG;EAAEC,KAAK,EAAE,gBAAgB;EAAEC,MAAM,EAAE;AAAgB,CAAC;AACnE,MAAMC,QAAQ,GAAG;EACfC,IAAI,EAAE;IACJC,UAAU,EAAE,yBAAyB;IACrCC,UAAU,EAAE,yCAAyC;IACrDC,UAAU,EAAE,+BAA+B;IAC3CC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,EAAE,wCAAwC;IACnDC,OAAO,EAAE,sCAAsC;IAC/CJ,UAAU,EAAE,uDAAuD;IACnEK,UAAU,EAAE;EACd;AACF,CAAC;AACD,MAAMC,KAAK,GAAG;EAAEC,EAAE,EAAE,KAAK;EAAEC,EAAE,EAAE,KAAK;EAAEC,EAAE,EAAE,UAAU;EAAEC,EAAE,EAAE;AAAM,CAAC;AAEjE,MAAMC,MAAM,GAAGA,CAAC;EACdC,QAAQ;EACRC,SAAS,GAAG,EAAE;EACdC,QAAQ;EACRC,SAAS;EACTC,KAAK,GAAG,EAAE;EACVC,IAAI,GAAG,EAAE;EACTC,OAAO,GAAG,EAAE;EACZC,KAAK,GAAG,EAAE;EACV,GAAGC;AACL,CAAC,KAAK;EAAA,IAAAC,iBAAA;EACJ,oBACE7B,OAAA;IACEqB,SAAS,EAAG,GAAEA,SAAU,IAAIG,KAAK,IAAIvB,MAAM,CAACuB,KAAK,CAAC,IAAK,EAAG,IACvDC,IAAI,IAAIX,KAAK,CAACW,IAAI,CAAC,IAAK,EAC1B,IAAIC,OAAO,MAAAG,iBAAA,GAAIzB,QAAQ,CAACsB,OAAO,CAAC,cAAAG,iBAAA,uBAAjBA,iBAAA,CAAoBF,KAAK,CAAC,KAAK,EAAG,EAAE;IAAA,GAChDC,SAAS;IAAAR,QAAA,GAEZ,CAAC,CAACE,QAAQ,IAAIA,QAAQ,EACtBF,QAAQ,EACR,CAAC,CAACG,SAAS,IAAIA,SAAS;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEb,CAAC;AAACC,EAAA,GAvBIf,MAAM;AAyBZA,MAAM,CAACgB,SAAS,GAAG;EACjBd,SAAS,EAAEvB,SAAS,CAACsC,MAAM;EAC3BhB,QAAQ,EAAEtB,SAAS,CAACuC,IAAI;EACxBb,KAAK,EAAE1B,SAAS,CAACwC,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;EAC3Cb,IAAI,EAAE3B,SAAS,CAACwC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EAC/CZ,OAAO,EAAE5B,SAAS,CAACwC,KAAK,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;EAC7CX,KAAK,EAAE7B,SAAS,CAACwC,KAAK,CAAC,CACrB,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,WAAW,EACX,SAAS,EACT,YAAY,CACb;AACH,CAAC;AAED,SAASnB,MAAM;AAAG,IAAAe,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}